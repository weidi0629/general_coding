/*
knapsack的dfs是倒过来的？ 不确定是不是常规做法，但是应该记住，一个要一个不要！

*/

class Solution {
public:
    
    int jobScheduling(vector<int>& startTime, vector<int>& endTime, vector<int>& profit) {
        vector<vector<int>> jobs;
        int n = profit.size();
        vector<int> memo(n+1,0);
        for(int i=0; i<n; i++){
            jobs.push_back({startTime[i],endTime[i],profit[i]});
        }
        std::sort(jobs.begin(),jobs.end(),[](vector<int> a, vector<int> b){
            return a[1] < b[1];
        });
        
        return dfs(jobs,n,memo);
    }
    
    int dfs(vector<vector<int>>& jobs, int i,vector<int>& memo){
        if(i==1) return jobs[i-1][2];
        
        if(memo[i]>0) return memo[i];
        
        int takei = jobs[i-1][2];
        
        int j = getNext(jobs, i); // get the next(previous) one which doesn't conflict 
        if(j!=-1)
            takei += dfs(jobs,j+1,memo);
        
        int excludei = dfs(jobs,i-1,memo); // not take i 
        
        memo[i] =  max(takei, excludei);
        
        return memo[i];
    }
    
    int getNext(vector<vector<int>>& jobs, int i){
        for(int j=i-1; j>=0; j--){
            if(jobs[j][1]<=jobs[i-1][0])
                return j;
        }
        return -1;
    }
    
};
